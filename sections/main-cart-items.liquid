{{ 'section-main-cart-items.css' | asset_url | stylesheet_tag }}
{{ 'social-proof-cart.js' | asset_url | script_tag }}

{%- comment -%}
  AirSyncX Cart Page - Shopify Compatible Implementation
  
  Key Features & Compatibility:
  ✅ Proper Shopify cart form structure with CSRF token
  ✅ Correct cart update API using variant IDs
  ✅ Section rendering for dynamic updates
  ✅ Proper discount code implementation
  ✅ Cart notes support
  ✅ Error handling and accessibility
  ✅ Hebrew RTL support
  ✅ Mobile responsive design
  ✅ Progress bar for free shipping
  ✅ Trust badges and security indicators
  ✅ Empty cart state
  ✅ Quantity validation and error recovery
  ✅ Live region updates for screen readers
  ✅ Proper checkout button implementation
{%- endcomment -%}

{%- comment -%}
  Dynamic Free Shipping Threshold Based on Currency
{%- endcomment -%}
{%- assign free_shipping_threshold = 19900 -%}
{%- if settings.free_shipping_threshold_ils != blank -%}
  {%- assign free_shipping_threshold = settings.free_shipping_threshold_ils | times: 100 -%}
{%- endif -%}

{%- if current_currency.iso_code == 'USD' -%}
  {%- if settings.free_shipping_threshold_usd != blank -%}
    {%- assign free_shipping_threshold = settings.free_shipping_threshold_usd | times: 100 -%}
  {%- else -%}
    {%- assign free_shipping_threshold = 5600 -%}
  {%- endif -%}
{%- elsif current_currency.iso_code == 'EUR' -%}
  {%- if settings.free_shipping_threshold_eur != blank -%}
    {%- assign free_shipping_threshold = settings.free_shipping_threshold_eur | times: 100 -%}
  {%- else -%}
    {%- assign free_shipping_threshold = 2300 -%}
  {%- endif -%}
{%- elsif current_currency.iso_code == 'GBP' -%}
  {%- if settings.free_shipping_threshold_gbp != blank -%}
    {%- assign free_shipping_threshold = settings.free_shipping_threshold_gbp | times: 100 -%}
  {%- else -%}
    {%- assign free_shipping_threshold = 2000 -%}
  {%- endif -%}
{%- endif -%}

{%- comment -%}
  Shopify Markets - Currency & Language Detection
{%- endcomment -%}
{%- assign current_currency = cart.currency -%}
{%- assign current_language = request.locale.iso_code -%}
{%- assign market = localization.market -%}

{%- comment -%}
  RTL/LTR Support Based on Language
{%- endcomment -%}
{%- assign is_rtl = false -%}
{%- if current_language == 'he' or current_language == 'ar' -%}
  {%- assign is_rtl = true -%}
{%- endif -%}

{%- if section.settings.background_image != blank -%}
  {%- assign cart_background_image = section.settings.background_image | image_url -%}
{%- else -%}
  {%- assign cart_background_image = "https://cdn.shopify.com/s/files/1/0931/3724/0362/files/58D88F7C-5197-4837-81BE-A669F3FE7240.png?v=1752672742" -%}
{%- endif -%}

<div class="airsyncx-cart-wrapper" style="--cart-background-image: url('{{ cart_background_image }}');" {% if is_rtl %}dir="rtl"{% else %}dir="ltr"{% endif %} data-currency="{{ current_currency.iso_code }}" data-language="{{ current_language }}">
  <div class="airsyncx-cart-container">
    <!-- הוספת קישור לספריית Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    
    <h1 class="airsyncx-cart-title">
      {{ 'sections.cart.title' | t }}
    </h1>
    
    <form action="{{ routes.cart_url }}" method="post" id="cart">
      <input type="hidden" name="authenticity_token" value="{{ form.authenticity_token }}">
      <div class="airsyncx-cart-layout">
        <div class="airsyncx-cart-main">
          <div id="main-cart-items">
      <div class="js-contents">
        {%- if cart != empty -%}
                {%- assign main_product = cart.items.first -%}
                
                <div class="airsyncx-product-card">
                  <!-- Image Section First -->
                  <div class="airsyncx-product-image-section">
                    <img
                      src="{{ main_product.image | image_url: width: 200 }}"
                      alt="{{ main_product.title | escape }}"
                      class="airsyncx-product-image"
                      loading="lazy"
                      width="160"
                      height="160"
                    >
                    
                    <a href="{{ main_product.url_to_remove }}" class="airsyncx-remove-button" aria-label="{{ 'sections.cart.remove_title' | t: title: main_product.title }}">
                      ×
                    </a>
                  </div>
                  
                  <!-- All Content Below Image -->
                  <div class="airsyncx-product-content">
                    <!-- Product Info Section -->
                    <div class="airsyncx-product-main-info">
                      {%- comment -%} Product Category {%- endcomment -%}
                      <div class="airsyncx-product-category">
                        {{ main_product.product.type | escape }}
                      </div>
                      
                      {%- comment -%} Product Name {%- endcomment -%}
                      <h2 class="airsyncx-product-name">{{ main_product.product.title | escape }}</h2>
                      
                      {%- if main_product.product.has_only_default_variant == false -%}
                        <div class="airsyncx-product-variant">
                          {%- for option in main_product.options_with_values -%}
                            {{ option.name }}: {{ option.value }}{% unless forloop.last %} | {% endunless %}
                          {%- endfor -%}
                        </div>
                      {%- endif -%}

                      {%- comment -%} Stock Warning {%- endcomment -%}
                      {%- if main_product.variant.inventory_management == 'shopify' -%}
                        {%- if main_product.variant.inventory_policy == 'deny' and main_product.variant.inventory_quantity > 0 and main_product.variant.inventory_quantity <= 25 -%}
                        <div class="airsyncx-stock-warning">
                            {{ 'products.product.stock.low_stock_with_quantity' | t: quantity: main_product.variant.inventory_quantity }}
                              </div>
                        {%- elsif main_product.variant.inventory_quantity == 0 and main_product.variant.inventory_policy == 'deny' -%}
                          <div class="airsyncx-stock-warning airsyncx-out-of-stock">
                            {{ 'products.product.stock.out_of_stock' | t }}
                              </div>
                          {%- endif -%}
                          {%- endif -%}
                    </div>

                    <!-- Price Section -->
                    <div class="airsyncx-price-total-section">
                      <div class="airsyncx-unit-price">
                        <span>
                          {%- if main_product.variant.compare_at_price > main_product.variant.price -%}
                            <span class="compare-at-price">{{ main_product.variant.compare_at_price | money }}</span>
                          {%- endif -%}
                          <span class="original-price">{{ 'products.product.price.regular_price' | t }}: {{ main_product.original_price | money }}</span>
                        </span>
                        <span class="best-value-badge">✓ {% if request.locale.iso_code == "he" %}מחיר משתלם{% else %}Best Value{% endif %}</span>
                      </div>
                      
                      {%- if main_product.quantity > 1 -%}
                        {%- assign total_savings = main_product.variant.compare_at_price | minus: main_product.variant.price | times: main_product.quantity -%}
                        {%- if total_savings > 0 -%}
                        <div class="airsyncx-savings">
                            {%- if current_language == 'en' -%}
                              You save {{ total_savings | money }} on bulk purchase!
                            {%- else -%}
                              חסכת {{ total_savings | money }} ברכישה מרובה!
                            {%- endif -%}
                        </div>
                        {%- endif -%}
                      {%- endif -%}
                    </div>
                    
                    <!-- Quantity Section -->
                    <div class="airsyncx-quantity-section">
                      <div class="airsyncx-quantity-selector">
                        <button type="button" class="airsyncx-quantity-button" data-action="decrease" aria-label="{{ 'products.product.quantity.decrease' | t }}">-</button>
                        <input
                          class="airsyncx-quantity-input"
                          data-quantity-variant-id="{{ main_product.variant.id }}"
                          type="number"
                          name="updates[]"
                          value="{{ main_product.quantity }}"
                          min="{{ main_product.variant.quantity_rule.min | default: 1 }}"
                          {% if main_product.variant.quantity_rule.max != null %}
                            max="{{ main_product.variant.quantity_rule.max }}"
                          {% endif %}
                          {% if main_product.variant.quantity_rule.increment != null %}
                            step="{{ main_product.variant.quantity_rule.increment }}"
                          {% endif %}
                          aria-label="{{ 'products.product.quantity.input_label' | t: product: main_product.product.title | escape }}"
                          id="Quantity-{{ main_product.index | plus: 1 }}"
                          data-index="{{ main_product.index | plus: 1 }}"
                          data-line="{{ main_product.index | plus: 1 }}"
                        >
                        <button type="button" class="airsyncx-quantity-button" data-action="increase" aria-label="{{ 'products.product.quantity.increase' | t }}">+</button>
                      </div>
                    </div>
                  </div>
                </div>
                
                <!-- Social Proof Container -->
                <div class="social-proof-container" id="social-proof-container">
                  <div class="social-proof-item active" data-type="recent-purchase">
                    <div class="social-proof-icon">
                      <i class="fas fa-user-check"></i>
                    </div>
                    <div class="social-proof-content">
                      <span class="social-proof-text">
                        {%- if current_language == 'en' -%}
                          <span class="customer-count">12</span> customers purchased this in the last 24 hours
                        {%- else -%}
                          <span class="customer-count">12</span> לקוחות רכשו את זה ב-24 השעות האחרונות
                        {%- endif -%}
                      </span>
                    </div>
                  </div>
                  
                  <div class="social-proof-item" data-type="limited-stock">
                    <div class="social-proof-icon">
                      <i class="fas fa-exclamation-triangle"></i>
                    </div>
                    <div class="social-proof-content">
                      <span class="social-proof-text">
                        {%- if current_language == 'en' -%}
                          Only <span class="stock-count">7</span> units left in stock!
                        {%- else -%}
                          נותרו רק <span class="stock-count">7</span> יחידות במלאי!
                        {%- endif -%}
                      </span>
                    </div>
                  </div>
                  
                  <div class="social-proof-item" data-type="review">
                    <div class="social-proof-icon">
                      <i class="fas fa-star"></i>
                    </div>
                    <div class="social-proof-content">
                      <span class="social-proof-text">
                        {%- if current_language == 'en' -%}
                          "Amazing quality! Fast delivery!" - <span class="reviewer-name">Sarah M.</span>
                        {%- else -%}
                          "איכות מדהימה! משלוח מהיר!" - <span class="reviewer-name">שרה מ.</span>
                        {%- endif -%}
                      </span>
                    </div>
                  </div>
                  
                  <div class="social-proof-item" data-type="fast-shipping">
                    <div class="social-proof-icon">
                      <i class="fas fa-shipping-fast"></i>
                    </div>
                    <div class="social-proof-content">
                      <span class="social-proof-text">
                        {%- if current_language == 'en' -%}
                          Order within <span class="time-left">2 hours</span> for same-day dispatch
                        {%- else -%}
                          הזמן תוך <span class="time-left">2 שעות</span> למשלוח היום
                        {%- endif -%}
                      </span>
                    </div>
                  </div>
                  
                  <div class="social-proof-item" data-type="trending">
                    <div class="social-proof-icon">
                      <i class="fas fa-fire"></i>
                    </div>
                    <div class="social-proof-content">
                      <span class="social-proof-text">
                        {%- if current_language == 'en' -%}
                          🔥 Trending now! <span class="view-count">247</span> people viewing this
                        {%- else -%}
                          🔥 טרנדי עכשיו! <span class="view-count">247</span> אנשים צפו בזה
                        {%- endif -%}
                      </span>
                    </div>
                  </div>
                  
                  <div class="social-proof-item" data-type="special-offer">
                    <div class="social-proof-icon">
                      <i class="fas fa-gift"></i>
                    </div>
                    <div class="social-proof-content">
                      <span class="social-proof-text">
                        {%- if current_language == 'en' -%}
                          🎁 Special offer expires in <span class="countdown">23:45</span>
                        {%- else -%}
                          🎁 המבצע הזה פג תוך <span class="countdown">23:45</span>
                        {%- endif -%}
                      </span>
                    </div>
                  </div>
                </div>
                
                <div class="hero-stats">
                  <div class="stat-item">
                    <div class="stat-icon">
                      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="28" height="28" fill="none" stroke="currentColor" stroke-width="2">
                        <path d="M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2"></path>
                        <circle cx="9" cy="7" r="4"></circle>
                        <path d="M22 21v-2a4 4 0 0 0-3-3.87"></path>
                        <path d="M16 3.13a4 4 0 0 1 0 7.75"></path>
                      </svg>
                    </div>
                    <div class="stat-content">
                      <div class="stat-number">1000+</div>
                      <div class="stat-label">
                        {% if request.locale.iso_code == 'he' %}
                          לקוחות מרוצים
                        {% else %}
                          Happy Customers
                        {% endif %}
                      </div>
                    </div>
                  </div>
                  <div class="stat-separator"></div>
                  <div class="stat-item">
                    <div class="stat-icon">
                      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="28" height="28" fill="none" stroke="currentColor" stroke-width="2">
                        <path d="M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z"></path>
                        <path d="M9 12l2 2 4-4"></path>
                      </svg>
                    </div>
                    <div class="stat-content">
                      <div class="stat-number">30</div>
                      <div class="stat-label">
                        {% if request.locale.iso_code == 'he' %}
                          יום החזר כספי
                        {% else %}
                          Day Money Back
                        {% endif %}
                      </div>
                    </div>
                  </div>
                  <div class="stat-separator"></div>
                  <div class="stat-item">
                    <div class="stat-icon">
                      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="28" height="28" fill="none" stroke="currentColor" stroke-width="2">
                        <circle cx="12" cy="12" r="10"></circle>
                        <polyline points="12,6 12,12 16,14"></polyline>
                      </svg>
                    </div>
                    <div class="stat-content">
                      <div class="stat-number">10</div>
                      <div class="stat-label">
                        {% if request.locale.iso_code == 'he' %}
                          שניות התקנה
                        {% else %}
                          Seconds Install
                        {% endif %}
                      </div>
                    </div>
                  </div>
                </div>
                
                                {%- else -%}
                <div class="airsyncx-empty-cart-container">
                  <div class="airsyncx-empty-cart-decoration">+</div>
                  <div class="airsyncx-empty-cart-decoration">*</div>
                  <div class="airsyncx-empty-cart-decoration">°</div>
                  <div class="airsyncx-empty-cart-decoration">•</div>
                  
                  <div class="airsyncx-empty-cart-icon">
                    <i class="fas fa-shopping-cart"></i>
                            </div>
                  
                  <h1 class="airsyncx-empty-cart-title">{{ 'sections.cart.empty_cart.title' | t }}</h1>
                  <p class="airsyncx-empty-cart-subtitle">{{ 'sections.cart.empty_cart.subtitle' | t }}</p>
                  
                  <a href="{{ routes.root_url }}" class="airsyncx-shop-now-button">
                    {{ 'sections.cart.empty_cart.button' | t }} <i class="fas fa-arrow-left"></i>
                  </a>
                </div>
                    {%- endif -%}
                    </div>
          </div>
        </div>
        
        {%- if cart != empty -%}
          <div class="airsyncx-cart-sidebar">
            <div class="airsyncx-totals-card">
              <h2 class="airsyncx-totals-title">{{ 'sections.cart.order_summary' | t }}</h2>
              <div class="airsyncx-totals-row">
                <span>{{ 'sections.cart.product_price' | t }}</span>
                <span>{{ cart.items_subtotal_price | money }}</span>
              </div>
              {% if cart.taxes_included %}
                <div class="airsyncx-totals-row">
                  <span>{{ 'sections.cart.vat_included' | t }}</span>
                  <span>{{ cart.tax_price | money }}</span>
                    </div>
                          {% endif %}
              
              <div class="airsyncx-totals-row total">
                <span>{{ 'sections.cart.total_payment' | t }}</span>
                <span>{{ cart.total_price | money }}</span>
                    </div>
              
              <div class="airsyncx-progress-container" id="shipping-progress-container" data-free-shipping-threshold="{{ free_shipping_threshold }}">
                {% assign progress_percentage = cart.total_price | divided_by: free_shipping_threshold | times: 100.0 | at_most: 100 %}
                <div class="airsyncx-progress-bar" id="shipping-progress-bar" style="width: {{ progress_percentage }}%;"></div>
                <div class="progress-icon-container" id="shipping-icon" style="left: {{ progress_percentage }}%;">
                  <i class="fas fa-truck-fast progress-icon"></i>
                    </div>
              </div>
              
              {% if cart.total_price < free_shipping_threshold %}
                <div class="airsyncx-progress-text" id="shipping-progress-text">
                  {{ 'sections.cart.free_shipping_message' | t: amount: free_shipping_threshold | minus: cart.total_price | money }}
                      </div>
              {% else %}
                <div class="airsyncx-progress-text progress-complete" id="shipping-progress-text">
                  {{ 'sections.cart.free_shipping_achieved' | t }}
                    </div>
                          {% endif %}
              
              <button type="submit" name="checkout" class="airsyncx-checkout-button">
                {{ 'sections.cart.secure_checkout' | t }}
                        </button>
<div class="airsyncx-payment-icons">
                <img src="https://cdn.shopify.com/s/files/1/0931/3724/0362/files/visa.svg?v=1752672742" alt="Visa" width="40" height="25">
                <img src="https://cdn.shopify.com/s/files/1/0931/3724/0362/files/mastercard.svg?v=1752672742" alt="Mastercard" width="40" height="25">
                <img src="https://cdn.shopify.com/s/files/1/0931/3724/0362/files/paypal.svg?v=1752672742" alt="PayPal" width="40" height="25">
                <img src="https://cdn.shopify.com/s/files/1/0931/3724/0362/files/apple-pay.svg?v=1752672742" alt="Apple Pay" width="40" height="25">
                <img src="https://cdn.shopify.com/s/files/1/0931/3724/0362/files/google-pay.svg?v=1752672742" alt="Google Pay" width="40" height="25">
              </div>
              
              {% if additional_checkout_buttons %}
                <div class="additional-checkout-buttons">
                  {{ content_for_additional_checkout_buttons }}
                        </div>
              {% endif %}
                
              <a href="{{ routes.all_products_collection_url }}" class="airsyncx-continue-shopping">
                {{ 'sections.cart.continue_shopping' | t }}
              </a>
              
              {%- if settings.show_cart_note -%}
                <div class="airsyncx-cart-note">
                  <label for="Cart-note">{{ 'sections.cart.note' | t }}</label>
                  <textarea
                    class="airsyncx-cart-note-input"
                    name="note"
                    id="Cart-note"
                    placeholder="{{ 'sections.cart.note' | t }}"
                  >{{ cart.note }}</textarea>
                </div>
              {%- endif -%}
              
              <div class="cart-note">
                {% if cart.taxes_included or shop.shipping_policy.body != blank %}
                  <div>
                    {%- if cart.taxes_included -%}
                      {{ 'sections.cart.taxes_included' | t }}
                    {%- endif -%}
                    {%- if cart.taxes_included and shop.shipping_policy.body != blank -%}
                      {{ 'general.accessibility.comma' | t }}
                    {%- endif -%}
                    {%- if shop.shipping_policy.body != blank -%}
                      {{ 'sections.cart.shipping_policy_html' | t: link: shop.shipping_policy.url }}
                      {%- endif -%}
                    </div>
                {% endif %}
                    </div>
                      </div>
                    </div>

          <!-- העברת הסטטיסטיקות לכאן כדי שיופיעו אחרי הסיידבר במובייל -->
          <div class="hero-stats hero-stats-mobile">
            <div class="stat-item">
              <div class="stat-icon">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="28" height="28" fill="none" stroke="currentColor" stroke-width="2">
                  <path d="M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2"></path>
                  <circle cx="9" cy="7" r="4"></circle>
                  <path d="M22 21v-2a4 4 0 0 0-3-3.87"></path>
                  <path d="M16 3.13a4 4 0 0 1 0 7.75"></path>
                </svg>
              </div>
              <div class="stat-content">
                <div class="stat-number">1000+</div>
                <div class="stat-label">
                  {% if request.locale.iso_code == 'he' %}
                    לקוחות מרוצים
                  {% else %}
                    Happy Customers
                  {% endif %}
                </div>
              </div>
            </div>
            <div class="stat-separator"></div>
            <div class="stat-item">
              <div class="stat-icon">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="28" height="28" fill="none" stroke="currentColor" stroke-width="2">
                  <path d="M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z"></path>
                  <path d="M9 12l2 2 4-4"></path>
                </svg>
              </div>
              <div class="stat-content">
                <div class="stat-number">30</div>
                <div class="stat-label">
                  {% if request.locale.iso_code == 'he' %}
                    יום החזר כספי
                  {% else %}
                    Day Money Back
                  {% endif %}
                </div>
              </div>
            </div>
            <div class="stat-separator"></div>
            <div class="stat-item">
              <div class="stat-icon">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="28" height="28" fill="none" stroke="currentColor" stroke-width="2">
                  <circle cx="12" cy="12" r="10"></circle>
                  <polyline points="12,6 12,12 16,14"></polyline>
                </svg>
              </div>
              <div class="stat-content">
                <div class="stat-number">10</div>
                <div class="stat-label">
                  {% if request.locale.iso_code == 'he' %}
                    שניות התקנה
                  {% else %}
                    Seconds Install
                  {% endif %}
                </div>
              </div>
            </div>
          </div>
                      {%- endif -%}
      </div>
      
      {%- if cart != empty -%}
        <div class="airsyncx-totals-box">
          <div class="airsyncx-total-label">
            <span data-total-text>
              {%- if current_language == 'en' -%}
                Total: {{ cart.total_price | money }}
              {%- else -%}
            סה"כ לתשלום: {{ cart.total_price | money }}
              {%- endif -%}
            </span>
            <div class="airsyncx-progress-container" id="shipping-progress-container" data-free-shipping-threshold="{{ free_shipping_threshold }}">
              {% assign progress_percentage = cart.total_price | divided_by: free_shipping_threshold | times: 100.0 | at_most: 100 %}
              <div class="airsyncx-progress-bar" id="shipping-progress-bar" style="width: {{ progress_percentage }}%;"></div>
              <div class="progress-icon-container" id="shipping-icon" style="left: {{ progress_percentage }}%;">
                <i class="fas fa-truck-fast progress-icon"></i>
                        </div>
                    </div>
            {% if cart.total_price < free_shipping_threshold %}
              <small>{{ 'sections.cart.free_shipping_message' | t: amount: free_shipping_threshold | minus: cart.total_price | money }}</small>
            {% endif %}
      </div>
          
          <button type="submit" name="checkout" class="airsyncx-checkout-button mobile" 
                  {% if cart == empty %}disabled{% endif %}
                  aria-describedby="cart-errors">
            {{ 'sections.cart.secure_checkout' | t }}
          </button>
    </div>
      {%- endif -%}

    <p class="visually-hidden" id="cart-live-region-text" aria-live="polite" role="status"></p>
    <p class="visually-hidden" id="shopping-cart-line-item-status" aria-live="polite" aria-hidden="true" role="status">
      {{ 'accessibility.loading' | t }}
    </p>
    
    <div id="cart-errors" class="cart__errors" role="alert" aria-live="assertive"></div>
  </form>
  </div>
</div>

<!-- אנימציית חגיגת משלוח חינם -->
<div class="free-shipping-celebration" id="free-shipping-celebration">
  <div class="celebration-message">{{ 'sections.cart.free_shipping_celebrate' | t }}</div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // בדיקת תאימות דפדפן וטעינת polyfills אם נדרש
    function checkBrowserCompatibility() {
      const isCompatible = {
        fetch: typeof fetch !== 'undefined',
        formData: typeof FormData !== 'undefined',
        localStorageSupported: (function() {
          try {
            const test = 'test';
            localStorage.setItem(test, test);
            localStorage.removeItem(test);
            return true;
          } catch(e) {
            return false;
          }
        })(),
        addEventListener: typeof document.addEventListener !== 'undefined',
        querySelector: typeof document.querySelector !== 'undefined',
        performance: typeof performance !== 'undefined' && typeof performance.mark !== 'undefined'
      };
      
      // Fallback לדפדפנים ישנים
      if (!isCompatible.fetch) {
        console.warn('Fetch API not supported, using XMLHttpRequest');
        window.fetch = function(url, options) {
          return new Promise(function(resolve, reject) {
            const xhr = new XMLHttpRequest();
            xhr.open(options.method || 'GET', url);
            
            Object.keys(options.headers || {}).forEach(function(key) {
              xhr.setRequestHeader(key, options.headers[key]);
            });
            
            xhr.onload = function() {
              resolve({
                ok: xhr.status >= 200 && xhr.status < 300,
                status: xhr.status,
                json: function() {
                  return Promise.resolve(JSON.parse(xhr.responseText));
                }
              });
            };
            
            xhr.onerror = function() {
              reject(new Error('Network error'));
            };
            
            xhr.send(options.body);
          });
        };
      }
      
      // Fallback ל-FormData
      if (!isCompatible.formData) {
        console.warn('FormData not supported, using URL encoding');
      }
      
      return isCompatible;
    }
    
    const browserSupport = checkBrowserCompatibility();
    
    // Quantity selectors
    const quantitySelectors = document.querySelectorAll('.airsyncx-quantity-selector');
    const cartForm = document.getElementById('cart');
    
    quantitySelectors.forEach(selector => {
      const decreaseBtn = selector.querySelector('[data-action="decrease"]');
      const increaseBtn = selector.querySelector('[data-action="increase"]');
      const input = selector.querySelector('.airsyncx-quantity-input');
      const lineIndex = input.getAttribute('data-index') || 1;
      const variantId = input.getAttribute('data-quantity-variant-id');
      
      console.log('Line index:', lineIndex, 'Variant ID:', variantId);
      
      decreaseBtn.addEventListener('click', function() {
        const currentValue = parseInt(input.value);
        if (currentValue > 1) {
          input.value = currentValue - 1;
          updateQuantity(lineIndex, currentValue - 1, variantId);
        }
      });
      
      increaseBtn.addEventListener('click', function() {
        const currentValue = parseInt(input.value);
        input.value = currentValue + 1;
        updateQuantity(lineIndex, currentValue + 1, variantId);
      });
      
      input.addEventListener('change', function() {
        const newValue = parseInt(input.value);
        if (newValue > 0) {
          updateQuantity(lineIndex, newValue, variantId);
        } else {
          input.value = 1;
          updateQuantity(lineIndex, 1, variantId);
        }
      });
    });

    function updateQuantity(lineIndex, quantity, variantId) {
      // בדיקת חיבור לאינטרנט
      if (!navigator.onLine) {
        showCartError('אין חיבור לאינטרנט. אנא בדוק את החיבור ונסה שוב');
        return;
      }

      // הצגת מצב טעינה
      const productCard = document.querySelector('.airsyncx-product-card');
      const quantityInput = document.querySelector(`[data-quantity-variant-id="${variantId}"]`);
      
      if (productCard) {
        productCard.style.opacity = '0.7';
        productCard.style.transition = 'opacity 0.2s';
        productCard.classList.add('updating');
      }
      
      if (quantityInput) {
        quantityInput.disabled = true;
      }
      
      // שימוש בנתוני Shopify נכונים לעדכון העגלה
      const formData = new FormData();
      formData.append(`updates[${variantId}]`, quantity);
      formData.append('sections', 'main-cart-items,cart-icon-bubble,cart-live-region-text');
      formData.append('sections_url', window.location.pathname);
      
      // בקשת AJAX לעדכון העגלה עם retry mechanism
      performCartUpdateWithRetry(formData, productCard, quantityInput, variantId);
    }

    function performCartUpdateWithRetry(formData, productCard, quantityInput, variantId, retryCount = 0) {
      // סימון תחילת מדידת ביצועים
      try {
        performance.mark('cart-update-start');
      } catch (e) {
        // Performance API לא נתמך
      }
      
      const maxRetries = 3;
      const timeoutDuration = 10000; // 10 שניות timeout
      
      // יצירת AbortController לביטול בקשה
      const abortController = new AbortController();
      const timeoutId = setTimeout(() => {
        abortController.abort();
      }, timeoutDuration);
      
      fetch('/cart/update.js', {
        method: 'POST',
        body: formData,
        headers: {
          'X-Requested-With': 'XMLHttpRequest'
        },
        signal: abortController.signal
      })
      .then(response => {
        clearTimeout(timeoutId);
        if (!response.ok) {
          throw new Error(`HTTP ${response.status}: ${response.statusText}`);
        }
        return response.json();
      })
      .then(cart => {
        console.log('Cart updated:', cart);
        
        // הסרת מצב טעינה
        if (productCard) {
          productCard.style.opacity = '1';
          productCard.classList.remove('updating');
        }
        
        if (quantityInput) {
          quantityInput.disabled = false;
        }
        
        // מדידת ביצועים
        performance.mark('cart-update-end');
        try {
          performance.measure('cart-update-duration', 'cart-update-start', 'cart-update-end');
          const measures = performance.getEntriesByName('cart-update-duration');
          if (measures.length > 0) {
            console.log(`Cart update took ${measures[0].duration.toFixed(2)}ms`);
          }
        } catch (e) {
          // Performance API לא נתמך
        }
        
        // עדכון מידע בעמוד לאחר עדכון העגלה
        updateCartUI(cart);
        
        // עדכון sections שהוחזרו מהשרת
        if (cart.sections) {
          if (cart.sections['main-cart-items']) {
            const parser = new DOMParser();
            const newDoc = parser.parseFromString(cart.sections['main-cart-items'], 'text/html');
            const newCartItems = newDoc.querySelector('#main-cart-items');
            const currentCartItems = document.querySelector('#main-cart-items');
            if (newCartItems && currentCartItems) {
              currentCartItems.innerHTML = newCartItems.innerHTML;
              // אתחול מחדש של event listeners
              reinitializeQuantitySelectors();
            }
          }
          
          if (cart.sections['cart-icon-bubble']) {
            const cartIconBubble = document.querySelector('#cart-icon-bubble');
            if (cartIconBubble) {
              const parser = new DOMParser();
              const newDoc = parser.parseFromString(cart.sections['cart-icon-bubble'], 'text/html');
              const newBubble = newDoc.querySelector('#cart-icon-bubble');
              if (newBubble) {
                cartIconBubble.innerHTML = newBubble.innerHTML;
              }
            }
          }
        }
      })
      .catch(error => {
        clearTimeout(timeoutId);
        console.error('Error updating cart:', error);
        
        // הסרת מצב טעינה
        if (productCard) {
          productCard.style.opacity = '1';
          productCard.classList.remove('updating');
        }
        
        if (quantityInput) {
          quantityInput.disabled = false;
        }
        
        // טיפול בסוג השגיאה
        if (error.name === 'AbortError') {
          // Timeout
          if (retryCount < maxRetries) {
            console.log(`Request timed out, retrying... (${retryCount + 1}/${maxRetries})`);
            setTimeout(() => {
              performCartUpdateWithRetry(formData, productCard, quantityInput, variantId, retryCount + 1);
            }, 2000 * (retryCount + 1));
            return;
          } else {
            showCartError(error.message.includes('timeout') ? 'הבקשה נמשכת זמן רב מדי. אנא בדוק את החיבור לאינטרנט' : error.message);
          }
        } else if (retryCount < maxRetries) {
          // שגיאות אחרות - ניסיון נוסף
          console.log(`Retrying cart update, attempt ${retryCount + 1}/${maxRetries}`);
          setTimeout(() => {
            performCartUpdateWithRetry(formData, productCard, quantityInput, variantId, retryCount + 1);
          }, 1000 * (retryCount + 1)); // Progressive delay
          return;
        }
        
        // טיפול בסוגי שגיאות שונים
        if (error.message.includes('422')) {
          showCartError('הכמות שבחרת אינה זמינה במלאי');
        } else if (error.message.includes('network') || error.message.includes('Failed to fetch')) {
          showCartError('בעיית חיבור לאינטרנט. אנא בדוק את החיבור ונסה שוב');
        } else {
          showCartError('אירעה שגיאה בעדכון העגלה. אנא נסה שוב');
        }
        
        // בחזרה למצב המקורי במקרה של שגיאה
        const correctInput = document.querySelector(`[data-quantity-variant-id="${variantId}"]`);
        if (correctInput) {
          fetch('/cart.json')
            .then(response => response.json())
            .then(currentCart => {
              const item = currentCart.items.find(item => item.variant_id == variantId);
              if (item && correctInput) {
                correctInput.value = item.quantity;
              }
            })
            .catch(() => {
              // אם גם זה נכשל, רענון הדף לאחר 3 שניות
              showCartError('שגיאה קריטית. העמוד יתרענן אוטומטית...');
              setTimeout(() => {
                window.location.reload();
              }, 3000);
            });
        }
      });
    }

    // פונקציה להצגת שגיאות עגלה
    function showCartError(message) {
      const errorContainer = document.getElementById('cart-errors');
      if (errorContainer) {
        const currentLang = document.querySelector('.airsyncx-cart-wrapper').dataset.language || 'he';
        
        // תרגום הודעות שגיאה נפוצות
        const errorTranslations = {
          'network': {
            'he': 'בעיית חיבור לאינטרנט. אנא בדוק את החיבור ונסה שוב',
            'en': 'Network connection error. Please check your connection and try again'
          },
          'quantity': {
            'he': 'הכמות שבחרת אינה זמינה במלאי',
            'en': 'The selected quantity is not available in stock'
          },
          'general': {
            'he': 'אירעה שגיאה בעדכון העגלה. אנא נסה שוב',
            'en': 'An error occurred updating the cart. Please try again'
          },
          'timeout': {
            'he': 'הבקשה נמשכת זמן רב מדי. אנא בדוק את החיבור לאינטרנט',
            'en': 'Request is taking too long. Please check your internet connection'
          },
          'critical': {
            'he': 'שגיאה קריטית. העמוד יתרענן אוטומטית...',
            'en': 'Critical error. The page will refresh automatically...'
          }
        };
        
        // בדיקה אם יש תרגום מתאים
        let translatedMessage = message;
        for (const [key, translations] of Object.entries(errorTranslations)) {
          if (message.includes(translations.he)) {
            translatedMessage = translations[currentLang] || translations.he;
            break;
          }
        }
        
        errorContainer.textContent = translatedMessage;
        errorContainer.style.display = 'block';
        
        // הסתרת השגיאה לאחר 5 שניות
        setTimeout(() => {
          errorContainer.style.display = 'none';
        }, 5000);
      }
    }

    // פונקציה לעדכון ממשק המשתמש של העגלה
    function updateCartUI(cart) {
      // עדכון סכום כולל
      const totalPriceElements = document.querySelectorAll('.airsyncx-totals-row.total span:last-child');
      totalPriceElements.forEach(el => {
        el.textContent = formatMoney(cart.total_price);
      });
      
      // עדכון סכום מוצרים
      const subtotalElements = document.querySelectorAll('.airsyncx-totals-row:not(.total) span:last-child');
      subtotalElements.forEach(el => {
        if (el.closest('.airsyncx-totals-row').querySelector('span:first-child').textContent.includes('מחיר מוצרים') || 
            el.closest('.airsyncx-totals-row').querySelector('span:first-child').textContent.toLowerCase().includes('product')) {
          // תמיד מציג את הסכום המקורי ללא הנחות
          el.textContent = formatMoney(cart.items_subtotal_price);
        }
      });
      
      // עדכון סכום בבר התחתון אם קיים
      const stickyTotal = document.querySelector('.airsyncx-total-label');
      if (stickyTotal) {
        const totalTextSpan = stickyTotal.querySelector('[data-total-text]');
        const currentLang = document.querySelector('.airsyncx-cart-wrapper').dataset.language || 'he';
        
        if (totalTextSpan) {
          if (currentLang === 'en') {
            totalTextSpan.textContent = `Total: ${formatMoney(cart.total_price)}`;
          } else {
            totalTextSpan.textContent = `סה"כ לתשלום: ${formatMoney(cart.total_price)}`;
          }
        }
      }
      
      // עדכון מחיר וסה"כ למוצר
      if (cart.items && cart.items.length > 0) {
        const lineItem = cart.items[0]; // המוצר הראשון
        
        // עדכון מחיר עם אלמנטים פסיכולוגיים
        updatePriceDisplay(lineItem);
        
        // עדכון הודעת חיסכון (airsyncx-savings)
        const savingsElement = document.querySelector('.airsyncx-savings');
        const productQuantity = lineItem.quantity;
        if (savingsElement && lineItem.variant) {
          if (productQuantity > 1 && lineItem.variant.compare_at_price > lineItem.original_price) {
            // חישוב החיסכון מהמחיר המקורי של Shopify (ללא הנחות קופון)
            const savings = (lineItem.variant.compare_at_price - lineItem.original_price) * productQuantity;
            const currentLang = document.querySelector('.airsyncx-cart-wrapper').dataset.language || 'he';
            
            if (currentLang === 'en') {
              savingsElement.textContent = `You save ${formatMoney(savings)} on bulk purchase!`;
            } else {
            savingsElement.textContent = `חסכת ${formatMoney(savings)} ברכישה מרובה!`;
            }
            savingsElement.style.display = 'inline-block';
          } else {
            // אם הכמות היא 1 או אין הנחה, מסתירים את אלמנט החיסכון
            savingsElement.style.display = 'none';
          }
        }
      }
      
      // עדכון מספר הפריטים בעגלה (cart-count)
      updateCartItemCount(cart);
      
      // עדכון פס התקדמות דינמי
      updateProgressBar(cart);
      
      // עדכון כפתור התשלום
      updateCheckoutButton(cart);
      
      // עדכון נגישות
      updateAccessibilityLabels(cart);
      
      // עדכון שמירת מצב העגלה
      saveCartState(cart);
      
      // אתחול מחדש של event listeners לכמויות
      reinitializeQuantitySelectors();
    }
    
    // פונקציה לעדכון מספר הפריטים בעגלה
    function updateCartItemCount(cart) {
      // חישוב סה"כ פריטים בעגלה
      let totalItems = 0;
      if (cart.items && cart.items.length > 0) {
        totalItems = cart.items.reduce((sum, item) => sum + item.quantity, 0);
      }
      
      // עדכון כל האלמנטים המציגים את מספר הפריטים בעגלה
      const cartCountElements = document.querySelectorAll('.cart-count');
      cartCountElements.forEach(el => {
        el.textContent = totalItems;
        
        // בדיקה אם יש אנימציה למונה העגלה
        if (el.classList.contains('cart-count--animate')) {
          el.classList.add('cart-count--updated');
          setTimeout(() => {
            el.classList.remove('cart-count--updated');
          }, 500);
        }
      });
      
      // עדכון גם לאלמנטים עם data-cart-count
      const dataCartCountElements = document.querySelectorAll('[data-cart-count]');
      dataCartCountElements.forEach(el => {
        el.setAttribute('data-cart-count', totalItems);
        el.textContent = totalItems;
      });
      
      // במקרה של אייקון עגלה באתר
      const cartIcons = document.querySelectorAll('.header__icon--cart-items');
      cartIcons.forEach(icon => {
        if (totalItems > 0) {
          icon.setAttribute('data-cart-items', totalItems);
          icon.classList.add('header__icon--cart-items--visible');
        } else {
          icon.removeAttribute('data-cart-items');
          icon.classList.remove('header__icon--cart-items--visible');
        }
      });
    }

    function formatMoney(cents) {
      const currentCurrency = document.querySelector('.airsyncx-cart-wrapper').dataset.currency || 'ILS';
      const value = (cents / 100).toFixed(2);
      
      if (currentCurrency === 'USD') {
        return `$${value}`;
      } else if (currentCurrency === 'ILS') {
        return `₪${value}`;
      } else {
        // ברירת מחדל לשקל
        return `₪${value}`;
      }
    }
    
    // עדכון מחיר ליחידה עם אלמנטים פסיכולוגיים
    function updatePriceDisplay(lineItem) {
      const unitPriceElement = document.querySelector('.airsyncx-unit-price');
      if (unitPriceElement && lineItem) {
        const priceSpan = unitPriceElement.querySelector('span');
        if (priceSpan) {
          // ניקוי התוכן הקיים
          priceSpan.innerHTML = '';
          
          // הוספת מחיר השוואה אם קיים
          if (lineItem.variant && lineItem.variant.compare_at_price > lineItem.original_price) {
            const compareSpan = document.createElement('span');
            compareSpan.style.textDecoration = 'line-through';
            compareSpan.style.opacity = '0.7';
            compareSpan.style.marginRight = '5px';
            compareSpan.style.fontSize = '0.85em';
            compareSpan.style.color = '#ffffff';
            compareSpan.style.whiteSpace = 'nowrap'; // מונע שבירת שורה
            compareSpan.style.display = 'inline-block'; // תצוגה בלוק פנימי
            compareSpan.textContent = formatMoney(lineItem.variant.compare_at_price);
            priceSpan.appendChild(compareSpan);
          }
          
          // הוספת המחיר המקורי (לא המחיר אחרי הנחה)
          const currentLang = document.querySelector('.airsyncx-cart-wrapper').dataset.language || 'he';
          const priceLabel = currentLang === 'en' ? 'Price: ' : 'מחיר: ';
          const priceTextSpan = document.createElement('span');
          priceTextSpan.style.whiteSpace = 'nowrap'; // מונע שבירת שורה
          priceTextSpan.textContent = priceLabel + formatMoney(lineItem.original_price);
          priceSpan.appendChild(priceTextSpan);
        }
      }
    }

    // עדכון פס התקדמות דינמי
    function updateProgressBar(cart) {
      const progressContainer = document.getElementById('shipping-progress-container');
      const iconContainer = document.getElementById('shipping-icon');
      const progressText = document.getElementById('shipping-progress-text');
      
      if (!progressContainer || !iconContainer || !progressText) return;
      
      const currentCurrency = document.querySelector('.airsyncx-cart-wrapper').dataset.currency || 'ILS';
      let maxAmount = 19900; // Default threshold for ILS (₪199)
      
      // Set appropriate threshold based on currency
      if (currentCurrency === 'USD') {
        maxAmount = 5600; // $56 for USD
      }
      
      const previousPercentage = progressContainer.dataset.previousPercentage || 0;
      const progressPercentage = Math.min((cart.total_price / maxAmount) * 100, 100);
      
      // עדכון הרקע של המיכל (מילוי הדרגתי של הצבע)
      progressContainer.style.setProperty('--progress-percentage', `${progressPercentage}%`);
      
      // עדכון מיקום האייקון
      iconContainer.style.left = `${progressPercentage}%`;
      
      // עדכון טקסט
      if (cart.total_price < maxAmount) {
        const amountLeft = maxAmount - cart.total_price;
        const currentLang = document.querySelector('.airsyncx-cart-wrapper').dataset.language || 'he';
        if (currentLang === 'en') {
          progressText.textContent = `Just ${formatMoney(amountLeft)} more and you'll unlock free shipping! 🚚💰`;
        } else {
          progressText.textContent = `עוד ${formatMoney(amountLeft)} בלבד וחסכת את דמי המשלוח! 🚚💰`;
        }
        progressText.classList.remove('progress-complete');
        progressContainer.classList.remove('progress-complete');
      } else {
        const currentLang = document.querySelector('.airsyncx-cart-wrapper').dataset.language || 'he';
        if (currentLang === 'en') {
          progressText.textContent = `You've unlocked free shipping! 🎉`;
        } else {
          progressText.textContent = 'הגעת למשלוח חינם! 🎉';
        }
        progressText.classList.add('progress-complete');
        progressContainer.classList.add('progress-complete');
      }
      
      // עדכון כל מיכלי ההתקדמות בעמוד (למקרה שיש יותר מאחד)
      const allProgressContainers = document.querySelectorAll('.airsyncx-progress-container');
      allProgressContainers.forEach(container => {
        if (container !== progressContainer) {
          container.style.setProperty('--progress-percentage', `${progressPercentage}%`);
          if (progressPercentage >= 100) {
            container.classList.add('progress-complete');
          } else {
            container.classList.remove('progress-complete');
          }
        }
      });
      
      // עדכון שמירת הערך הקודם של האחוזים להשוואה
      progressContainer.dataset.previousPercentage = progressPercentage;
      
      // עדכון בדיקה אם הגענו לסף של משלוח חינם וזה שינוי ממצב קודם
      if (progressPercentage >= 100 && previousPercentage < 100) {
        showFreeShippingCelebration();
      }
    }
    
    // עדכון ראשוני של הפס בטעינת העמוד
    fetch('/cart.json')
      .then(response => response.json())
      .then(cart => {
        updateProgressBar(cart);
      })
      .catch(error => {
        console.error('Error fetching cart:', error);
      });
    // פונקציה להצגת אנימציית חגיגת משלוח חינם
    function showFreeShippingCelebration() {
      const celebrationContainer = document.getElementById('free-shipping-celebration');
      if (!celebrationContainer) return;
      
      // מחיקת אימוג'ים קודמים אם קיימים
      const existingEmojis = celebrationContainer.querySelectorAll('.money-emoji');
      existingEmojis.forEach(emoji => emoji.remove());
      
      // הצגת קונטיינר האנימציה
      celebrationContainer.style.display = 'block';
      
      // אימוג'ים של כסף
      const moneyEmojis = ['💰', '💵', '💎', '🤑', '💸', '💲', '🏆', '✨'];
      
      // יצירת אימוג'ים מתעופפים
      for (let i = 0; i < 40; i++) {
        const emoji = document.createElement('div');
        emoji.className = 'money-emoji';
        emoji.textContent = moneyEmojis[Math.floor(Math.random() * moneyEmojis.length)];
        
        // מיקום אקראי
        const randomLeft = Math.random() * 100;
        emoji.style.left = `${randomLeft}%`;
        
        // גודל אקראי
        const randomSize = Math.random() * 24 + 16;
        emoji.style.fontSize = `${randomSize}px`;
        
        // השהייה אקראית
        const randomDelay = Math.random() * 1;
        emoji.style.animationDelay = `${randomDelay}s`;
        
        // משך אקראי
        const randomDuration = Math.random() * 1.5 + 2;
        emoji.style.animationDuration = `${randomDuration}s`;
        
        celebrationContainer.appendChild(emoji);
      }
      
      // סגירת האנימציה אוטומטית לאחר 4 שניות
      setTimeout(() => {
        celebrationContainer.style.display = 'none';
      }, 4000);
    }

    // מנגנון קופונים AJAX - הוסר
    
    // פונקציה לעדכון כפתור התשלום
    function updateCheckoutButton(cart) {
      const checkoutButtons = document.querySelectorAll('.airsyncx-checkout-button');
      const currentLang = document.querySelector('.airsyncx-cart-wrapper').dataset.language || 'he';
      
      checkoutButtons.forEach(button => {
        if (cart.item_count === 0) {
          button.disabled = true;
          button.textContent = currentLang === 'en' ? 'Cart is empty' : 'העגלה ריקה';
        } else {
          button.disabled = false;
          button.textContent = button.textContent; // Keep the existing translated text
        }
      });
    }

    // אתחול מחדש של quantity selectors לאחר עדכון AJAX
    function reinitializeQuantitySelectors() {
      // הסרת event listeners קיימים
      const existingSelectors = document.querySelectorAll('.airsyncx-quantity-selector');
      existingSelectors.forEach(selector => {
        const newSelector = selector.cloneNode(true);
        selector.parentNode.replaceChild(newSelector, selector);
      });
      
      // הוספת event listeners מחדש
      const quantitySelectors = document.querySelectorAll('.airsyncx-quantity-selector');
      quantitySelectors.forEach(selector => {
        const decreaseBtn = selector.querySelector('[data-action="decrease"]');
        const increaseBtn = selector.querySelector('[data-action="increase"]');
        const input = selector.querySelector('.airsyncx-quantity-input');
        
        if (!input) return;
        
        const lineIndex = input.getAttribute('data-index') || 1;
        const variantId = input.getAttribute('data-quantity-variant-id');
        
        decreaseBtn.addEventListener('click', function() {
          const currentValue = parseInt(input.value);
          const minValue = parseInt(input.getAttribute('min')) || 1;
          if (currentValue > minValue) {
            input.value = currentValue - 1;
            debouncedUpdateQuantity(lineIndex, currentValue - 1, variantId);
          }
        });
        
        increaseBtn.addEventListener('click', function() {
          const currentValue = parseInt(input.value);
          const maxQuantity = input.getAttribute('max') || 99;
          if (currentValue < maxQuantity) {
            input.value = currentValue + 1;
            debouncedUpdateQuantity(lineIndex, currentValue + 1, variantId);
          }
        });
        
        input.addEventListener('change', function() {
          const newValue = parseInt(input.value);
          const minQuantity = parseInt(input.getAttribute('min')) || 1;
          const maxQuantity = parseInt(input.getAttribute('max')) || 99;
          
          if (newValue < minQuantity) {
            input.value = minQuantity;
            debouncedUpdateQuantity(lineIndex, minQuantity, variantId);
          } else if (newValue > maxQuantity) {
            input.value = maxQuantity;
            debouncedUpdateQuantity(lineIndex, maxQuantity, variantId);
          } else if (newValue > 0) {
            debouncedUpdateQuantity(lineIndex, newValue, variantId);
          } else {
            input.value = minQuantity;
            debouncedUpdateQuantity(lineIndex, minQuantity, variantId);
          }
        });
      });
    }

    // Debouncing לעדכוני כמות - מונע בקשות מרובות
    const debouncedUpdateQuantity = debounce(updateQuantity, 500);

    function debounce(func, wait) {
      let timeout;
      return function executedFunction(...args) {
        const later = () => {
          clearTimeout(timeout);
          func(...args);
        };
        clearTimeout(timeout);
        timeout = setTimeout(later, wait);
      };
    }

    // ניווט מקלדת ונגישות
    document.addEventListener('keydown', function(e) {
      // ESC לסגירת הודעות שגיאה
      if (e.key === 'Escape') {
        const errorContainer = document.getElementById('cart-errors');
        if (errorContainer && errorContainer.style.display !== 'none') {
          errorContainer.style.display = 'none';
        }
      }
      
      // Enter על כפתורי כמות
      if (e.key === 'Enter' && e.target.classList.contains('airsyncx-quantity-button')) {
        e.target.click();
      }
      
      // חיצי מקלדת לשינוי כמות
      if (e.target.classList.contains('airsyncx-quantity-input')) {
        if (e.key === 'ArrowUp') {
          e.preventDefault();
          const increaseBtn = e.target.parentNode.querySelector('[data-action="increase"]');
          if (increaseBtn) increaseBtn.click();
        } else if (e.key === 'ArrowDown') {
          e.preventDefault();
          const decreaseBtn = e.target.parentNode.querySelector('[data-action="decrease"]');
          if (decreaseBtn) decreaseBtn.click();
        }
      }
    });

    // הוספת ARIA labels וערכים דינמיים
    function updateAccessibilityLabels(cart) {
      const currentLang = document.querySelector('.airsyncx-cart-wrapper').dataset.language || 'he';
      
      // עדכון תיאור מונה עגלה
      const cartCountElements = document.querySelectorAll('[aria-label*="cart"], [aria-label*="עגלה"]');
      cartCountElements.forEach(el => {
        const itemCount = cart.item_count || 0;
        if (currentLang === 'en') {
          el.setAttribute('aria-label', `Shopping cart with ${itemCount} items`);
        } else {
          el.setAttribute('aria-label', `עגלת קניות עם ${itemCount} פריטים`);
        }
      });
      
      // עדכון live region
      const liveRegion = document.getElementById('cart-live-region-text');
      if (liveRegion && cart.item_count !== undefined) {
        if (currentLang === 'en') {
          liveRegion.textContent = `Cart contains ${cart.item_count} items. Total ${formatMoney(cart.total_price)}`;
        } else {
          liveRegion.textContent = `העגלה מכילה ${cart.item_count} פריטים. סה"כ ${formatMoney(cart.total_price)}`;
        }
      }
    }

    // פונקציה לבדיקת מלאי
    function validateInventory(item) {
      // בדיקה אם המוצר מנוהל על ידי Shopify
      if (item.variant && item.variant.inventory_management === 'shopify') {
        // בדיקה אם המדיניות היא למנוע רכישה כשאין מלאי
        if (item.variant.inventory_policy === 'deny' && item.variant.inventory_quantity !== undefined) {
          if (item.variant.inventory_quantity < item.quantity) {
            const currentLang = document.querySelector('.airsyncx-cart-wrapper').dataset.language || 'he';
            const errorMsg = currentLang === 'en' 
              ? `Only ${item.variant.inventory_quantity} units available for ${item.product_title}`
              : `רק ${item.variant.inventory_quantity} יחידות זמינות עבור ${item.product_title}`;
            showCartError(errorMsg);
            
            // עדכון אוטומטי לכמות זמינה
            const input = document.querySelector(`[data-quantity-variant-id="${item.variant_id}"]`);
            if (input && item.variant.inventory_quantity > 0) {
              input.value = item.variant.inventory_quantity;
              updateQuantity(input.getAttribute('data-index'), item.variant.inventory_quantity, item.variant_id);
            }
          }
          
          // אזהרת מלאי נמוך
          if (item.variant.inventory_quantity > 0 && item.variant.inventory_quantity <= 10) {
            const stockWarning = document.querySelector('.airsyncx-stock-warning');
            if (stockWarning) {
              const currentLang = document.querySelector('.airsyncx-cart-wrapper').dataset.language || 'he';
              stockWarning.textContent = currentLang === 'en' 
                ? `Only ${item.variant.inventory_quantity} left in stock!`
                : `נותרו רק ${item.variant.inventory_quantity} יחידות במלאי!`;
              stockWarning.style.display = 'block';
            }
          }
        }
      }
    }

    // שמירת מצב העגלה ב-localStorage לשחזור במקרה של בעיה
    function saveCartState(cart) {
      try {
        const cartState = {
          timestamp: Date.now(),
          items: cart.items,
          total_price: cart.total_price,
          item_count: cart.item_count,
          currency: document.querySelector('.airsyncx-cart-wrapper').dataset.currency
        };
        localStorage.setItem('airsyncx_cart_backup', JSON.stringify(cartState));
      } catch (e) {
        console.warn('Could not save cart state to localStorage');
      }
    }

    // טעינת מצב העגלה מ-localStorage
    function loadCartState() {
      try {
        const saved = localStorage.getItem('airsyncx_cart_backup');
        if (saved) {
          const cartState = JSON.parse(saved);
          // בדיקה שהמידע לא ישן מדי (יותר מ-24 שעות)
          if (Date.now() - cartState.timestamp < 24 * 60 * 60 * 1000) {
            return cartState;
          } else {
            localStorage.removeItem('airsyncx_cart_backup');
          }
        }
      } catch (e) {
        console.warn('Could not load cart state from localStorage');
        localStorage.removeItem('airsyncx_cart_backup');
      }
      return null;
    }

    // אירועי offline/online
    window.addEventListener('online', function() {
      const currentLang = document.querySelector('.airsyncx-cart-wrapper').dataset.language || 'he';
      const onlineMsg = currentLang === 'en' ? 'Internet connection restored' : 'החיבור לאינטרנט חזר';
      showSuccessMessage(onlineMsg);
      
      // בדיקה אם יש שינויים שלא נשמרו
      const savedState = loadCartState();
      if (savedState) {
        fetch('/cart.json')
          .then(response => response.json())
          .then(currentCart => {
            // השוואת מצב שמור למצב נוכחי
            if (savedState.item_count !== currentCart.item_count) {
              const syncMsg = currentLang === 'en' 
                ? 'Unsaved changes detected. The page will refresh to sync the cart'
                : 'זוהו שינויים שלא נשמרו. העמוד יתרענן כדי לסנכרן את העגלה';
              showCartError(syncMsg);
              setTimeout(() => window.location.reload(), 3000);
            }
          });
      }
    });

    window.addEventListener('offline', function() {
      const currentLang = document.querySelector('.airsyncx-cart-wrapper').dataset.language || 'he';
      const offlineMsg = currentLang === 'en' 
        ? 'No internet connection. Changes will be saved locally until connection returns'
        : 'אין חיבור לאינטרנט. השינויים יישמרו מקומית עד שהחיבור יחזור';
      showCartError(offlineMsg);
    });

    // פונקציה להצגת הודעת הצלחה
    function showSuccessMessage(message) {
      const currentLang = document.querySelector('.airsyncx-cart-wrapper').dataset.language || 'he';
      
      // תרגום הודעות הצלחה
      const successTranslations = {
        'updated': {
          'he': 'הכמות עודכנה בהצלחה',
          'en': 'Quantity updated successfully'
        },
        'removed': {
          'he': 'פריט לא תקין הוסר מהעגלה',
          'en': 'Invalid item removed from cart'
        },
        'online': {
          'he': 'החיבור לאינטרנט חזר',
          'en': 'Internet connection restored'
        }
      };
      
      // בדיקה אם יש תרגום מתאים
      let translatedMessage = message;
      for (const [key, translations] of Object.entries(successTranslations)) {
        if (message.includes(translations.he)) {
          translatedMessage = translations[currentLang] || translations.he;
          break;
        }
      }
      
      const successDiv = document.createElement('div');
      successDiv.className = 'cart-success-message';
      successDiv.textContent = translatedMessage;
      document.body.appendChild(successDiv);
      
      setTimeout(() => {
        successDiv.classList.add('show');
      }, 100);
      
      setTimeout(() => {
        successDiv.classList.remove('show');
        setTimeout(() => {
          successDiv.remove();
        }, 300);
      }, 2000);
    }

    // בדיקת תוקף פריטי העגלה
    function validateCartItems() {
      fetch('/cart.json')
        .then(response => response.json())
        .then(cart => {
          if (cart.items && cart.items.length > 0) {
            cart.items.forEach(item => {
              // בדיקה שהמוצר עדיין קיים ופעיל
              if (!item.product_id || !item.variant_id) {
                const currentLang = document.querySelector('.airsyncx-cart-wrapper').dataset.language || 'he';
                const errorMsg = currentLang === 'en' 
                  ? `Product "${item.title || 'Unknown'}" is no longer available`
                  : `המוצר "${item.title || 'לא ידוע'}" אינו זמין יותר`;
                showCartError(errorMsg);
                // הסרה אוטומטית של המוצר הלא תקין
                removeInvalidItem(item.key);
              }
              
              // בדיקת מלאי מעודכנת
              validateInventory(item);
            });
          }
        })
        .catch(error => {
          console.error('Error validating cart items:', error);
        });
    }

    // הסרת פריט לא תקין מהעגלה
    function removeInvalidItem(itemKey) {
      const formData = new FormData();
      formData.append(`updates[${itemKey}]`, 0);
      
      fetch('/cart/update.js', {
        method: 'POST',
        body: formData
      })
      .then(response => response.json())
      .then(cart => {
        updateCartUI(cart);
        const currentLang = document.querySelector('.airsyncx-cart-wrapper').dataset.language || 'he';
        const successMsg = currentLang === 'en' 
          ? 'Invalid item removed from cart'
          : 'פריט לא תקין הוסר מהעגלה';
        showSuccessMessage(successMsg);
      })
      .catch(error => {
        console.error('Error removing invalid item:', error);
      });
    }

    // ביצוע בדיקת תוקף בטעינת הדף
    validateCartItems();

    // בדיקה מחזורית כל 30 שניות אם הדף פעיל
    let validationInterval;
    
    function startPeriodicValidation() {
      validationInterval = setInterval(() => {
        if (document.visibilityState === 'visible') {
          validateCartItems();
        }
      }, 30000); // כל 30 שניות
    }

    function stopPeriodicValidation() {
      if (validationInterval) {
        clearInterval(validationInterval);
      }
    }

    // הפעלה/הפסקה של בדיקות מחזוריות על פי נראות הדף
    document.addEventListener('visibilitychange', function() {
      if (document.visibilityState === 'visible') {
        validateCartItems();
        startPeriodicValidation();
      } else {
        stopPeriodicValidation();
      }
    });

    // הפעלת בדיקות מחזוריות
    startPeriodicValidation();

    // Shopify Markets - Currency & Language Switching
    const currencySelector = document.getElementById('CartCurrencySelector');
    const languageSelector = document.getElementById('CartLanguageSelector');
    const localizationForm = document.getElementById('CartLocalizationForm');
    
    function handleLocalizationChange() {
      if (localizationForm) {
        // הצגת loading state
        document.body.classList.add('localization-loading');
        
        // שליחת הטופס
        localizationForm.submit();
      }
    }
    
    // טיפול מיוחד בבחירת מטבע
    function handleCurrencyChange() {
      const selectedCountry = currencySelector.value;
      
      // עדכון URL עם המטבע החדש
      const currentUrl = new URL(window.location.href);
      
      if (selectedCountry === 'IL') {
        currentUrl.searchParams.set('currency', 'ILS');
        currentUrl.searchParams.set('country', 'IL');
      } else if (selectedCountry === 'US') {
        currentUrl.searchParams.set('currency', 'USD');
        currentUrl.searchParams.set('country', 'US');
      }
      
      // הצגת loading state
      document.body.classList.add('localization-loading');
      
      // ניווט לכתובת החדשה
      window.location.href = currentUrl.toString();
    }
    
    if (currencySelector) {
      currencySelector.addEventListener('change', handleCurrencyChange);
    }
    
    if (languageSelector) {
      languageSelector.addEventListener('change', handleLocalizationChange);
    }

    // Dynamic text updates based on language
    function updateDynamicTexts() {
      const currentLang = document.querySelector('.airsyncx-cart-wrapper').dataset.language;
      const currentCurrency = document.querySelector('.airsyncx-cart-wrapper').dataset.currency;
      
      // עדכון טקסטים דינמיים על פי שפה
      if (currentLang === 'en') {
        // Update trust badges for English
        const trustBadges = {
          secure: 'Secure Purchase',
          warranty: '1 Year Warranty',
          returns: '30 Days Returns'
        };
        
        document.querySelectorAll('.airsyncx-trust-badge').forEach(badge => {
          const icon = badge.querySelector('i');
          if (icon) {
            const textNode = badge.childNodes[badge.childNodes.length - 1];
            if (icon.classList.contains('fa-shield-alt') && textNode) {
              textNode.nodeValue = ' ' + trustBadges.secure;
            } else if (icon.classList.contains('fa-medal') && textNode) {
              textNode.nodeValue = ' ' + trustBadges.warranty;
            } else if (icon.classList.contains('fa-exchange-alt') && textNode) {
              textNode.nodeValue = ' ' + trustBadges.returns;
            }
          }
        });
      }
      
      // עדכון כיוון הטקסט
      const isRTL = currentLang === 'he' || currentLang === 'ar';
      document.querySelectorAll('.airsyncx-cart-wrapper').forEach(wrapper => {
        wrapper.setAttribute('dir', isRTL ? 'rtl' : 'ltr');
      });
      
      // עדכון יישור טקסט בהתאם
      document.querySelectorAll('.airsyncx-product-name, .airsyncx-product-variant, .airsyncx-unit-price').forEach(el => {
        el.style.textAlign = isRTL ? 'right' : 'left';
      });
    }

    // קריאה ראשונית לעדכון טקסטים
    updateDynamicTexts();
    
    // אתחול מטבע נכון בטעינת הדף
    function initializeCurrency() {
      const currentCurrency = document.querySelector('.airsyncx-cart-wrapper').dataset.currency;
      const currencySelector = document.getElementById('CartCurrencySelector');
      
      if (currencySelector && currentCurrency) {
        if (currentCurrency === 'USD') {
          currencySelector.value = 'US';
        } else {
          currencySelector.value = 'IL';
        }
      }
    }
    
    // קריאה לאתחול המטבע
    initializeCurrency();

    // Listen for currency format updates
    document.addEventListener('cart:updated', function() {
      updateDynamicTexts();
    });
  });
</script>

{% schema %}
{
  "name": "t:sections.main-cart-items.name",
  "settings": [
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    },
    {
      "type": "image_picker",
      "id": "background_image",
      "label": "תמונת רקע לעגלה"
    }
  ]
}
{% endschema %}
