<!-- Sticky ATC Button -->
<div class="sticky-atc-container">
  <button class="close-sticky-btn" aria-label="{% if request.locale.iso_code == 'he' %}סגור{% else %}Close{% endif %}">&times;</button>
  <div class="sticky-atc-content">
    <div class="sticky-atc-info">
      <div class="sticky-atc-main-text">
        <span class="sticky-atc-title">
          {% if request.locale.iso_code == 'he' %}
            ⭐ <span class="highlight">הצטרף ל-1,000+ נהגים</span> - <span class="red-question">מחיר מיוחד</span>
          {% else %}
            ⭐ <span class="highlight">Join 1,000+ drivers</span> - <span class="red-question">Special Price</span>
          {% endif %}
        </span>
        <div class="sticky-atc-meta">
          <span class="stars">★★★★★</span>
          <span class="rating-count">4.9 (296)</span>
          <span class="inventory-dot"></span>
          <span class="inventory-text">{% if request.locale.iso_code == 'he' %}נותרו 7 במלאי{% else %}7 left{% endif %}</span>
        </div>
      </div>
    </div>
    <div class="cta-wrapper">
      <button type="button" class="sticky-atc-button" id="sticky-add-to-cart-btn">
        <span id="dynamic-button-text">
          {% if request.locale.iso_code == 'he' %}
            🛒 הזמן עכשיו
          {% else %}
            🛒 Order Now
          {% endif %}
        </span>
      </button>
    </div>
  </div>
</div>

<style>
  .sticky-atc-container {
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    width: 100%;
    background: linear-gradient(135deg, rgba(0, 0, 0, 0.95) 0%, rgba(20, 20, 20, 0.98) 100%);
    z-index: 999;
    transform: translateY(100%);
    transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    box-shadow: 0 -4px 20px rgba(0, 0, 0, 0.3), 0 -1px 0 rgba(56, 210, 210, 0.3);
    direction: {% if request.locale.iso_code == 'he' %}rtl{% else %}ltr{% endif %};
    border-top: 1px solid rgba(56, 210, 210, 0.4);
    backdrop-filter: blur(15px) saturate(1.2);
    -webkit-backdrop-filter: blur(15px) saturate(1.2);
    min-height: 60px;
    max-height: 70px;
  }
  
  .close-sticky-btn {
    position: absolute;
    top: 8px;
    {% if request.locale.iso_code == 'he' %}
      left: 8px;
    {% else %}
      right: 8px;
    {% endif %}
    background: rgba(255, 255, 255, 0.1);
    color: rgba(255, 255, 255, 0.7);
    border: 1px solid rgba(255, 255, 255, 0.15);
    border-radius: 50%;
    width: 20px;
    height: 20px;
    font-size: 12px;
    line-height: 1;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0;
    z-index: 1001;
    transition: all 0.3s ease;
    opacity: 0.6;
  }
  
  .close-sticky-btn:hover {
    background: rgba(255, 255, 255, 0.2);
    opacity: 1;
    transform: scale(1.1);
    color: #fff;
  }
  
  .sticky-atc-container.show {
    transform: translateY(0);
    animation: slideUpSmooth 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }
  
  @keyframes slideUpSmooth {
    0% {
      transform: translateY(100%);
      opacity: 0;
    }
    100% {
      transform: translateY(0);
      opacity: 1;
    }
  }
  
  .sticky-atc-content {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    gap: 15px;
    max-width: 1200px;
    margin: 0 auto;
    padding: 12px 20px;
    min-height: 60px;
  }
  
  .sticky-atc-info {
    display: flex;
    flex-direction: column;
    justify-content: center;
    text-align: {% if request.locale.iso_code == 'he' %}right{% else %}left{% endif %};
    flex: 1;
    min-width: 0;
  }
  
  .sticky-atc-main-text {
    display: flex;
    flex-direction: column;
    gap: 4px;
  }
  
  .sticky-atc-title {
    font-size: 0.95rem;
    font-weight: 700;
    color: #ffffff;
    margin: 0;
    text-shadow: 0 1px 3px rgba(0,0,0,0.5);
    line-height: 1.3;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }
  
  .highlight {
    color: #38d2d2;
    font-weight: 800;
    position: relative;
    display: inline;
  }
  
  .red-question {
    color: #ff4757;
    font-weight: 800;
  }
  
  .sticky-atc-meta {
    display: flex;
    align-items: center;
    gap: 8px;
    font-size: 0.8rem;
    opacity: 0.9;
  }
  
  .stars {
    color: #FFD700;
    font-size: 0.85rem;
    letter-spacing: -1px;
  }
  
  .rating-count {
    color: rgba(255, 255, 255, 0.8);
    font-weight: 600;
  }
  
  .inventory-dot {
    width: 6px;
    height: 6px;
    border-radius: 50%;
    background-color: #ff4757;
    animation: pulse 2s infinite;
    flex-shrink: 0;
  }
  
  @keyframes pulse {
    0% {
      box-shadow: 0 0 0 0 rgba(255, 71, 87, 0.7);
    }
    70% {
      box-shadow: 0 0 0 6px rgba(255, 71, 87, 0);
    }
    100% {
      box-shadow: 0 0 0 0 rgba(255, 71, 87, 0);
    }
  }
  
  .inventory-text {
    color: #ff4757;
    font-weight: 600;
    white-space: nowrap;
  }
  
  .cta-wrapper {
    display: flex;
    align-items: center;
    flex-shrink: 0;
  }
  
  .sticky-atc-button {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 6px;
    background: linear-gradient(135deg, #ff6b35 0%, #f7931e 50%, #ff4500 100%);
    color: #ffffff;
    border: none;
    border-radius: 16px;
    padding: 10px 20px;
    font-weight: 800;
    font-size: 0.9rem;
    cursor: pointer;
    transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    text-decoration: none;
    box-shadow: 
      0 4px 15px rgba(255, 107, 53, 0.4),
      0 2px 8px rgba(0, 0, 0, 0.2),
      inset 0 1px 0 rgba(255, 255, 255, 0.3);
    position: relative;
    overflow: hidden;
    min-width: 140px;
    height: 40px;
    border: 2px solid rgba(255, 107, 53, 0.7);
    text-shadow: 0 1px 2px rgba(0,0,0,0.2);
  }
  
  .sticky-atc-button:before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent 0%, rgba(255,255,255,0.4) 50%, transparent 100%);
    animation: shine 3s infinite;
  }
  
  @keyframes shine {
    0% { left: -100%; }
    20% { left: 100%; }
    100% { left: 100%; }
  }
  
  .sticky-atc-button:hover {
    transform: translateY(-2px) scale(1.05);
    background: linear-gradient(135deg, #ff8c5a 0%, #ff6b35 50%, #f7931e 100%);
    box-shadow: 
      0 6px 20px rgba(255, 107, 53, 0.6),
      0 4px 12px rgba(0, 0, 0, 0.3),
      inset 0 1px 0 rgba(255, 255, 255, 0.4);
  }
  
  .sticky-atc-button:active {
    transform: translateY(-1px) scale(1.02);
  }
  
  #dynamic-button-text {
    transition: all 0.3s ease;
    font-weight: 800;
    position: relative;
    z-index: 1;
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .sticky-atc-container {
      min-height: 55px;
      max-height: 65px;
    }
    
    .sticky-atc-content {
      padding: 10px 15px;
      gap: 10px;
      min-height: 55px;
    }
    
    .sticky-atc-title {
      font-size: 0.85rem;
    }
    
    .sticky-atc-meta {
      font-size: 0.75rem;
      gap: 6px;
    }
    
    .stars {
      font-size: 0.8rem;
    }
    
    .sticky-atc-button {
      font-size: 0.85rem;
      padding: 8px 16px;
      min-width: 120px;
      height: 36px;
    }
    
    .close-sticky-btn {
      top: 6px;
      {% if request.locale.iso_code == 'he' %}
        left: 6px;
      {% else %}
        right: 6px;
      {% endif %}
      width: 18px;
      height: 18px;
      font-size: 11px;
    }
  }
  
  @media (max-width: 480px) {
    .sticky-atc-content {
      flex-direction: column;
      gap: 8px;
      padding: 8px 12px;
      text-align: center;
    }
    
    .sticky-atc-info {
      text-align: center;
      width: 100%;
    }
    
    .sticky-atc-title {
      font-size: 0.8rem;
      white-space: normal;
      overflow: visible;
      text-overflow: unset;
    }
    
    .sticky-atc-meta {
      justify-content: center;
      flex-wrap: wrap;
    }
    
    .sticky-atc-button {
      width: 100%;
      max-width: 280px;
    }
    
    .sticky-atc-container {
      min-height: 70px;
      max-height: 80px;
    }
    
    .sticky-atc-content {
      min-height: 70px;
    }
  }
  
  /* High DPI screens */
  @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
    .sticky-atc-container {
      backdrop-filter: blur(20px) saturate(1.3);
      -webkit-backdrop-filter: blur(20px) saturate(1.3);
    }
  }
  
  /* Reduced motion preference */
  @media (prefers-reduced-motion: reduce) {
    .sticky-atc-container,
    .sticky-atc-button,
    .close-sticky-btn {
      transition: none;
      animation: none;
    }
    
    .inventory-dot,
    .red-question {
      animation: none;
    }
    
    .sticky-atc-button:before {
      animation: none;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const stickyContainer = document.querySelector('.sticky-atc-container');
    const buttonText = document.getElementById('dynamic-button-text');
    const closeButton = document.querySelector('.close-sticky-btn');
    const specsContainer = document.querySelector('.airsyncx-specs') || document.querySelector('#specs') || document.querySelector('[class*="specs"]');
    
    // משתנה לשמירת מצב סגירה ידנית
    let manuallyClosedByUser = false;
    
    // סגירת הבאנר בלחיצה על כפתור הסגירה
    closeButton.addEventListener('click', function() {
      stickyContainer.classList.remove('show');
      stickyContainer.style.transform = 'translateY(100%)';
      manuallyClosedByUser = true; // סימון שהמשתמש סגר ידנית
    });
    
    function toggleStickyAtc() {
      // הצג רק אם לא נסגר ידנית ורק אם גללנו מעבר לסקשן airsyncx-specs
      if (!manuallyClosedByUser && specsContainer) {
        const specsContainerRect = specsContainer.getBoundingClientRect();
        
        // הצג רק אם הסקשן specs עבר לגמרי מעל החלק העליון של החלון (כלומר, גללנו מעבר לסקשן)
        if (specsContainerRect.bottom < 0) {
          stickyContainer.classList.add('show');
        } else {
          stickyContainer.classList.remove('show');
        }
      }
    }
    
    window.addEventListener('scroll', toggleStickyAtc);
    toggleStickyAtc(); // Check initially
    
    // מערך של טקסטים לכפתור בשתי השפות
    const buttonPhrases = {
      he: [
        "🛒 הזמן עכשיו במחיר מיוחד",
        "⚡ לא לפספס! הזמן עכשיו",
        "💥 מבצע מוגבל - הזמן היום",
        "🔥 אחרונים במלאי - הזמן מיד"
      ],
      en: [
        "🛒 Order Now at Special Price",
        "⚡ Don't Miss Out! Order Now",
        "💥 Limited Offer - Order Today",
        "🔥 Last Units - Order Now"
      ]
    };

    // בחירת שפה לפי ממשק המשתמש
    const currentLocale = document.documentElement.lang || 'en';
    const phrases = currentLocale === 'he' ? buttonPhrases.he : buttonPhrases.en;
    
    // שינוי הטקסט בכפתור כל 5 שניות
    let currentPhraseIndex = 0;
    
    function rotateButtonText() {
      if (buttonText) {
        buttonText.style.opacity = '0';
        
        setTimeout(function() {
          currentPhraseIndex = (currentPhraseIndex + 1) % phrases.length;
          buttonText.textContent = phrases[currentPhraseIndex];
          buttonText.style.opacity = '1';
        }, 300);
      }
    }
    
    // הפעל את רוטציית הטקסטים
    setInterval(rotateButtonText, 5000);

    // טיפול בלחצן הוספה לסל
    const addToCartBtn = document.getElementById('sticky-add-to-cart-btn');
    
    if (addToCartBtn) {
      addToCartBtn.addEventListener('click', function() {
        // הצג מצב טעינה בכפתור
        addToCartBtn.classList.add('loading');
        
        // משוך את מידע המוצר
        fetch('/products/wireless-carplay-adapter.js')
          .then(response => response.json())
          .then(product => {
            // לקבל את המזהה של הגרסה הראשונה או הברירת מחדל
            const variantId = product.variants[0].id;
            
            // הוספת המוצר לסל
            return fetch(window.routes.cart_add_url, {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
                'Accept': 'application/json'
              },
              body: JSON.stringify({
                items: [{
                  id: variantId,
                  quantity: 1
                }]
              })
            });
          })
          .then(response => response.json())
          .then(data => {
            // איפוס מצב הכפתור
            addToCartBtn.classList.remove('loading');
            
            if (data.status && data.status !== 200) {
              console.error('Error adding product to cart:', data);
              return;
            }
            
            // פתיחת מגירת עגלת קניות אם זמינה או הפניה לדף עגלת קניות
            if (typeof window.openCartDrawer === 'function') {
              window.openCartDrawer();
            } else {
              window.location.href = window.routes.cart_url;
            }
          })
          .catch(error => {
            console.error('Error adding product to cart:', error);
            addToCartBtn.classList.remove('loading');
          });
      });
    }
  });
</script>
